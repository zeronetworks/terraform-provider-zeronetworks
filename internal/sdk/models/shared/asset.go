// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Asset struct {
	// Possible asset status:
	//   * '0' - Unknown
	//   * '1' - Client
	//   * '2' - Server
	//   * '3' - Virtual cluster
	//   * '4' - IP camera
	//   * '5' - Smart TV
	//   * '6' - Factory controller
	//   * '7' - Medical device
	//   * '8' - Printer
	//   * '9' - Scanner
	//   * '10' - Smart card reader
	//   * '11' - Router
	//   * '12' - Hypervisor
	//   * '13' - PLC
	//   * '14' - HMI
	//   * '15' - Switch
	//   * '16' - Terminal station
	//   * '17' - RTU
	//   * '18' - Wireless access point
	//   * '19' - Historian
	//   * '20' - Game console
	//   * '21' - Fire alarm
	//   * '22' - UPS
	//   * '23' - Storage appliance
	//   * '24' - Virtualization appliance
	//   * '25' - Firewall appliance
	//   * '26' - Security scanner
	//   * '27' - Security controller
	//   * '28 ' - Door lock
	//   * '29' - Biometric entry system
	//   * '30' - HVAC
	//   * '31' - Room scheduler
	//   * '32' - Load Balancer Appliance
	//   * '33' - WAN Concentrator
	//   * '34' - IPAM Appliance
	//   * '35' - TEMPERATURE SENSOR GATEWAY
	//   * '36' - POWER METER
	//   * '37' - CONVEYOR SYSTEM
	//   * '38' - BUILDING AUTOMATION DEVICE
	//   * '39' - VISION CONTROLLER
	//   * '40' - MANUFACTURING EXECUTION SYSTEM
	//   * '41' - BACNET BROADCAST MANAGEMENT DEVICE BBMD
	//   * '42' - BACNET ROUTER AND BBMD
	//   * '43' - CLOCK
	//   * '44' - RFID
	//   * '45' - SCALE
	//   * '46' - MOBILE PRINTER
	//   * '47' - IED
	//   * '48' - CNC MILL
	//   * '49' - ROOM MONITOR
	//   * '50' - SMART SPEAKER
	//   * '51' - VENDING MACHINE
	//   * '52' - AUTONOMOUS VEHICLE
	//   * '53' - FLEET MANAGEMENT SYSTEM
	//   * '54' - BACNET ROUTER
	//   * '55' - MOTOR CONTROLLER
	//   * '56' - OT GATEWAY
	//   * '57' - CONTROLLER
	//   * '58' - BUILDING MANAGEMENT SYSTEM
	//   * '59' - VOIP PHONE
	//   * '60' - VISION SENSOR
	//   * '61' - REMOTE IO
	//   * '62' - VOIP SERVER
	//   * '63' - FLOW METER
	//   * '64' - BUILDING AUTOMATION CONTROLLER
	//   * '65' - SECURITY CAMERA
	//   * '66' - DIGITAL SIGN
	//   * '67' - REMOTE ACCESS GATEWAY
	//   * '68' - TEMPERATURE SENSOR
	//   * '69' - RTLS
	//   * '70' - SERIAL TO ETHERNET
	//   * '71' - INTERCOM
	//   * '72' - ENGINEERING STATION
	//   * '73' - DATA LOGGER GATEWAY
	//   * '74' - ROBOT
	//   * '75' - TABLET
	//   * '76' - SCADA SERVER
	//   * '77' - INDUSTRIAL PRINTER
	//   * '78' - VISION CAMERA
	//   * '79' - TIME CLOCK
	//   * '80' - VIDEO CONFERENCE
	//   * '81' - ELECTRICAL DRIVE
	//   * '82' - ACCESS CONTROL
	//   * '83' - PRINTER 3D
	//   * '84' - ACCESS CONTROL GATEWAY
	//   * '85' - ATM
	//   * '86' - AUDIO DECODER
	//   * '87' - AV SYSTEM
	//   * '88' - BACNET ROUTER BBMD
	//   * '89' - BADGE READER
	//   * '90' - BARCODE SCANNER
	//   * '91' - BUILDING AUTOMATION CONTROLLER GATEWAY
	//   * '92' - BUILDING MANAGEMENT SENSOR
	//   * '93' - BUILDING MANAGEMENT SENSOR GATEWAY
	//   * '94' - BUILDING MANAGEMENT SYSTEM GATEWAY
	//   * '95' - CAR
	//   * '96' - CIRCUIT MONITOR
	//   * '97' - CLINICAL MOBILE DEVICE
	//   * '98' - CLINICAL MOBILE DEVICE GATEWAY
	//   * '99' - CLOCK GATEWAY
	//   * '100' - CNC SYSTEM
	//   * '101' - CONFERENCE ROOM
	//   * '102' - DATA LOGGER
	//   * '103' - DIGITAL SIGN WORKSTATION
	//   * '104' - DISK PUBLISHER
	//   * '105' - DISPATCHER
	//   * '106' - EMBEDDED PC
	//   * '107' - ENCODER
	//   * '108' - EV CHARGING
	//   * '109' - FITNESS DEVICE
	//   * '110' - GENERIC MOBILE DEVICE
	//   * '111' - GPS NAVIGATOR
	//   * '112' - INDUSTRIAL BARCODE SCANNER
	//   * '113' - INDUSTRIAL METAL DETECTOR
	//   * '114' - INDUSTRIAL NETWORK EQUIPMENT
	//   * '115' - INDUSTRIAL THIN CLIENT
	//   * '116' - INDUSTRIAL THIN CLIENT GATEWAY
	//   * '117' - INDUSTRIAL WIRELESS
	//   * '118' - INDUSTRIAL WORKSTATION
	//   * '119' - INSPECTION SYSTEM
	//   * '120' - INTERACTIVE VOICE RESPONSE
	//   * '121' - INTERCOM GATEWAY
	//   * '122' - IOT CONTROLLER
	//   * '123' - LOCK BOX
	//   * '124' - MACHINERY HEALTH ANALYZER
	//   * '125' - MAILING SYSTEM
	//   * '126' - MEDIA GATEWAY
	//   * '127' - MEDIA PLAYER
	//   * '128' - MEDIA STREAMER
	//   * '129' - MICROSCOPE
	//   * '130' - MOBILE COMPUTER
	//   * '131' - MOTOR STARTER
	//   * '132' - MUSICAL INSTRUMENT
	//   * '133' - OPC SERVER
	//   * '134' - ORDER FULFILLMENT SYSTEM
	//   * '135' - OT DEVICE
	//   * '136' - OT SERVER
	//   * '137' - PA SYSTEM
	//   * '138' - PAYMENT KIOSK
	//   * '139' - PHYSICAL SECURITY PLATFORM
	//   * '140' - POINT OF SALE
	//   * '141' - POINT OF SALE GATEWAY
	//   * '142' - POWER DISTRIBUTION UNIT
	//   * '143' - POWER DISTRIBUTION UNIT GATEWAY
	//   * '144' - POWER SUPPLY
	//   * '145' - PRINT SERVER
	//   * '146' - PROJECTOR
	//   * '147' - RADIO
	//   * '148' - RADIO REPEATER
	//   * '149' - RECORDING SERVER
	//   * '150' - REPORTING SERVER
	//   * '151' - ROOM AUTOMATION STATION
	//   * '152' - ROOM DISPLAY
	//   * '153' - RTLS GATEWAY
	//   * '154' - SAFETY SYSTEM
	//   * '155' - SCADA CLIENT
	//   * '156' - SCREEN SHARE
	//   * '157' - SECURITY XRAY SCANNER
	//   * '158' - SENSOR
	//   * '159' - SERIAL TO ETHERNET GATEWAY
	//   * '160' - SERVICE TROLLEY
	//   * '161' - SMART BOARD
	//   * '162' - SMART HOME
	//   * '163' - SMART LIGHT
	//   * '164' - SMART LIGHT GATEWAY
	//   * '165' - SMART LOCK CONTROLLER
	//   * '166' - SMARTPHONE
	//   * '167' - SMARTWATCH
	//   * '168' - SOLAR ENERGY
	//   * '169' - TIME CLOCK GATEWAY
	//   * '170' - VIDEO CONFERENCE GATEWAY
	//   * '171' - VIDEO DECODER
	//   * '172' - VIDEO ENCODER
	//   * '173' - VIDEO SURVEILLANCE DEVICE
	//   * '174' - VOIP ADAPTER
	//   * '175' - VOIP PHONE GATEWAY
	//   * '176' - WATER SYSTEM
	//   * '177' - WIRELESS PHONE
	//   * '178' - WIRELESS PHONE GATEWAY
	//   * '1001' - OTHER OT
	//
	AssetType               *AssetType  `json:"assetType,omitempty"`
	BreakGlassActivated     *bool       `json:"breakGlassActivated,omitempty"`
	Domain                  *string     `json:"domain,omitempty"`
	ID                      *string     `json:"id,omitempty"`
	IsQuarantined           *bool       `json:"isQuarantined,omitempty"`
	IdentityProtectionState *int64      `json:"identityProtectionState,omitempty"`
	Name                    *string     `json:"name,omitempty"`
	OtLocattion             *OtLocation `json:"otLocattion,omitempty"`
	// * '0' - Unspecified
	// * '1' - Unsegmented
	// * '2' - Unsegmenting
	// * '3' - Segmented
	// * '4' - Segmenting
	// * '5' - Learning until
	// * '6' - forced_unprotected
	// * '7' - Unsegmenting' - Due to Policy
	// * '8' - Segmented' - Due to Policy
	// * '9' - Segmenting- Due to Policy
	// * '10' - Learning until' - Due to Policy
	// * '11' - Learning done
	// * '12' - Learning done- Due to Policy
	// * '13' - APPLYING_QUEUE_WITH_BLOCKS
	// * '14' - APPLYING_QUEUE_WITH_BLOCKS_DUE_TO_POLICY
	// * '15' - QUEUED_WITH_BLOCKS
	// * '16' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY
	// * '17' - QUEUED_WITH_BLOCKS_DONE
	// * '18' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY_DONE
	//
	ProtectionState    *ProtectionState `json:"protectionState,omitempty"`
	RPCProtectionState *int64           `json:"rpcProtectionState,omitempty"`
	// Possible asset status:
	//   * '1' - Not monitored
	//   * '2' - Segment server
	//   * '4' - Can't be monitored (unsupported OS)
	//   * '5' - Can't be monitored (unmonitorable)
	//   * '6' - Can't be monitored (unmonitorable)
	//   * '7' - Cloud connector
	//   * '8' - Not monitored (ansible unreachable)
	//   * '9' - Not monitored (cloud connector uninstalled)
	//   * '10' - Not monitored (cloud connector required)
	//   * '12' - Can't be monitored (inactive entity)
	//   * '13' - Stalked Externally
	//   * '14' - Lightweight Agent
	//
	AssetStatus           *AssetStatus `json:"assetStatus,omitempty"`
	AssignedDeployment    *IDNamePair  `json:"assignedDeployment,omitempty"`
	AssignedDeploymentID  *string      `json:"assignedDeploymentId,omitempty"`
	CloudConnectorVersion *string      `json:"cloudConnectorVersion,omitempty"`
	EnvironmentGroup      *IDNamePair  `json:"environmentGroup,omitempty"`
	ExternalDeviceID      *string      `json:"externalDeviceId,omitempty"`
	Fqdn                  *string      `json:"fqdn,omitempty"`
	HasDNS                *bool        `json:"hasDns,omitempty"`
	HealthState           *HealthState `json:"healthState,omitempty"`
	// Epoch Millis
	IdentityProtectAt *int64 `json:"identityProtectAt,omitempty"`
	// Epoch Millis
	IdentityProtectedAt *int64 `json:"identityProtectedAt,omitempty"`
	// * '1' - Duplicated in asset repository
	// * '2' - Manually set as inactive
	// * '3' - None
	// * '4' - Disabled in asset repository
	// * '5' - Inactive in asset repository
	// * '6' - Deleted in asset repository
	//
	InactiveReason *InactiveReason `json:"inactiveReason,omitempty"`
	// Epoch Millis
	InactiveSince *int64   `json:"inactiveSince,omitempty"`
	IPV4Addresses []string `json:"ipV4Addresses,omitempty"`
	IPV6Addresses []string `json:"ipV6Addresses,omitempty"`
	// Epoch Millis
	LastLogon           *int64  `json:"lastLogon,omitempty"`
	Manufacturer        *string `json:"manufacturer,omitempty"`
	OperatingSystem     *string `json:"operatingSystem,omitempty"`
	OsType              *int64  `json:"osType,omitempty"`
	OutboundRestriction *int64  `json:"outboundRestriction,omitempty"`
	// Epoch Millis
	PasswordUpdateTime    *int64      `json:"passwordUpdateTime,omitempty"`
	PreferredDeployment   *IDNamePair `json:"preferredDeployment,omitempty"`
	PreferredDeploymentID *string     `json:"preferredDeploymentId,omitempty"`
	PrincipalName         *string     `json:"principalName,omitempty"`
	// Epoch Millis
	ProtectAt *int64 `json:"protectAt,omitempty"`
	// Epoch Millis
	ProtectedAt  *int64 `json:"protectedAt,omitempty"`
	PurdueLevel  *int64 `json:"purdueLevel,omitempty"`
	RPCMonitored *bool  `json:"rpcMonitored,omitempty"`
	// Epoch Millis
	RPCProtectAt *int64 `json:"rpcProtectAt,omitempty"`
	// Epoch Millis
	RPCProtectedAt *int64 `json:"rpcProtectedAt,omitempty"`
	// Possible asset sources:
	//   * '1' - Access portal
	//   * '2' - SSP
	//   * '3' - Active directory
	//   * '4' - Custom
	//   * '5' - System
	//   * '6' - Ansible
	//   * '7' - Manual OT/IoT
	//   * '8' - Workgroup
	//   * '9' - Azure active directory
	//   * '10' - Azure
	//   * '11' - AWS
	//   * '12' - GCP
	//   * '14' - Jamf
	//   * '15' - Manual Linux
	//   * '16' - IBM cloud
	//   * '17' - Oracle cloud
	//   * '18' - VMware cloud
	//   * '19' - Alibaba cloud
	//   * '20' - Lumen cloud
	//   * '21' - OVH cloud
	//   * '22' - Connect
	//   * '23' - AI
	//   * '24' - SNOW
	//   * '25' - Google Workspace
	//   * '26' - OU
	//   * '27' - Environment
	//   * '28' - Conditional
	//   * '29' - Claroty OT
	//   * '30' - Manual Mac
	//
	Source                   *Source     `json:"source,omitempty"`
	State                    *AssetState `json:"state,omitempty"`
	SwitchLocationOverridden *bool       `json:"switchLocationOverridden,omitempty"`
}

func (o *Asset) GetAssetType() *AssetType {
	if o == nil {
		return nil
	}
	return o.AssetType
}

func (o *Asset) GetBreakGlassActivated() *bool {
	if o == nil {
		return nil
	}
	return o.BreakGlassActivated
}

func (o *Asset) GetDomain() *string {
	if o == nil {
		return nil
	}
	return o.Domain
}

func (o *Asset) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Asset) GetIsQuarantined() *bool {
	if o == nil {
		return nil
	}
	return o.IsQuarantined
}

func (o *Asset) GetIdentityProtectionState() *int64 {
	if o == nil {
		return nil
	}
	return o.IdentityProtectionState
}

func (o *Asset) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Asset) GetOtLocattion() *OtLocation {
	if o == nil {
		return nil
	}
	return o.OtLocattion
}

func (o *Asset) GetProtectionState() *ProtectionState {
	if o == nil {
		return nil
	}
	return o.ProtectionState
}

func (o *Asset) GetRPCProtectionState() *int64 {
	if o == nil {
		return nil
	}
	return o.RPCProtectionState
}

func (o *Asset) GetAssetStatus() *AssetStatus {
	if o == nil {
		return nil
	}
	return o.AssetStatus
}

func (o *Asset) GetAssignedDeployment() *IDNamePair {
	if o == nil {
		return nil
	}
	return o.AssignedDeployment
}

func (o *Asset) GetAssignedDeploymentID() *string {
	if o == nil {
		return nil
	}
	return o.AssignedDeploymentID
}

func (o *Asset) GetCloudConnectorVersion() *string {
	if o == nil {
		return nil
	}
	return o.CloudConnectorVersion
}

func (o *Asset) GetEnvironmentGroup() *IDNamePair {
	if o == nil {
		return nil
	}
	return o.EnvironmentGroup
}

func (o *Asset) GetExternalDeviceID() *string {
	if o == nil {
		return nil
	}
	return o.ExternalDeviceID
}

func (o *Asset) GetFqdn() *string {
	if o == nil {
		return nil
	}
	return o.Fqdn
}

func (o *Asset) GetHasDNS() *bool {
	if o == nil {
		return nil
	}
	return o.HasDNS
}

func (o *Asset) GetHealthState() *HealthState {
	if o == nil {
		return nil
	}
	return o.HealthState
}

func (o *Asset) GetIdentityProtectAt() *int64 {
	if o == nil {
		return nil
	}
	return o.IdentityProtectAt
}

func (o *Asset) GetIdentityProtectedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.IdentityProtectedAt
}

func (o *Asset) GetInactiveReason() *InactiveReason {
	if o == nil {
		return nil
	}
	return o.InactiveReason
}

func (o *Asset) GetInactiveSince() *int64 {
	if o == nil {
		return nil
	}
	return o.InactiveSince
}

func (o *Asset) GetIPV4Addresses() []string {
	if o == nil {
		return nil
	}
	return o.IPV4Addresses
}

func (o *Asset) GetIPV6Addresses() []string {
	if o == nil {
		return nil
	}
	return o.IPV6Addresses
}

func (o *Asset) GetLastLogon() *int64 {
	if o == nil {
		return nil
	}
	return o.LastLogon
}

func (o *Asset) GetManufacturer() *string {
	if o == nil {
		return nil
	}
	return o.Manufacturer
}

func (o *Asset) GetOperatingSystem() *string {
	if o == nil {
		return nil
	}
	return o.OperatingSystem
}

func (o *Asset) GetOsType() *int64 {
	if o == nil {
		return nil
	}
	return o.OsType
}

func (o *Asset) GetOutboundRestriction() *int64 {
	if o == nil {
		return nil
	}
	return o.OutboundRestriction
}

func (o *Asset) GetPasswordUpdateTime() *int64 {
	if o == nil {
		return nil
	}
	return o.PasswordUpdateTime
}

func (o *Asset) GetPreferredDeployment() *IDNamePair {
	if o == nil {
		return nil
	}
	return o.PreferredDeployment
}

func (o *Asset) GetPreferredDeploymentID() *string {
	if o == nil {
		return nil
	}
	return o.PreferredDeploymentID
}

func (o *Asset) GetPrincipalName() *string {
	if o == nil {
		return nil
	}
	return o.PrincipalName
}

func (o *Asset) GetProtectAt() *int64 {
	if o == nil {
		return nil
	}
	return o.ProtectAt
}

func (o *Asset) GetProtectedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.ProtectedAt
}

func (o *Asset) GetPurdueLevel() *int64 {
	if o == nil {
		return nil
	}
	return o.PurdueLevel
}

func (o *Asset) GetRPCMonitored() *bool {
	if o == nil {
		return nil
	}
	return o.RPCMonitored
}

func (o *Asset) GetRPCProtectAt() *int64 {
	if o == nil {
		return nil
	}
	return o.RPCProtectAt
}

func (o *Asset) GetRPCProtectedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.RPCProtectedAt
}

func (o *Asset) GetSource() *Source {
	if o == nil {
		return nil
	}
	return o.Source
}

func (o *Asset) GetState() *AssetState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *Asset) GetSwitchLocationOverridden() *bool {
	if o == nil {
		return nil
	}
	return o.SwitchLocationOverridden
}
