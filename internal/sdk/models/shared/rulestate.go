// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuleState - * '1' - Enabled
// * '2' - Disabled
// * '3' - Deleted By User
// * '4' - Pending Review
// * '5' - Pending Review Auto
// * '6' - Rejected by User
// * '7' - Excluded by User
type RuleState int

const (
	RuleStateOne   RuleState = 1
	RuleStateTwo   RuleState = 2
	RuleStateThree RuleState = 3
	RuleStateFour  RuleState = 4
	RuleStateFive  RuleState = 5
	RuleStateSix   RuleState = 6
	RuleStateSeven RuleState = 7
)

func (e RuleState) ToPointer() *RuleState {
	return &e
}
func (e *RuleState) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 7:
		*e = RuleState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleState: %v", v)
	}
}
