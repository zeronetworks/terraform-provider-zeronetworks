// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProtocolType - 6=TCP, 17=UDP
type ProtocolType int

const (
	ProtocolTypeSix       ProtocolType = 6
	ProtocolTypeSeventeen ProtocolType = 17
)

func (e ProtocolType) ToPointer() *ProtocolType {
	return &e
}
func (e *ProtocolType) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 6:
		fallthrough
	case 17:
		*e = ProtocolType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProtocolType: %v", v)
	}
}

type ReactivePolicy struct {
	AdditionalPortsList []PortsList `json:"additionalPortsList,omitempty"`
	// Epoch Millis
	CreatedAt       *int64      `json:"createdAt,omitempty"`
	CreatedBy       *string     `json:"createdBy,omitempty"`
	CreatedByName   *string     `json:"createdByName,omitempty"`
	ChangeTicket    *string     `json:"changeTicket,omitempty"`
	Context         *int64      `json:"context,omitempty"`
	Description     *string     `json:"description,omitempty"`
	DstEntityInfo   *IDNamePair `json:"dstEntityInfo,omitempty"`
	DstPort         *string     `json:"dstPort,omitempty"`
	DstProcessNames []string    `json:"dstProcessNames,omitempty"`
	// * '1' - ReactivePolicy
	// * '2' - Automated
	// * '3' - AccessPortal
	// * '4' - AdminPortal
	// * '5' - AI
	// * '6' - API
	// * '7' - Setup
	// * '8' - Connect
	// * '9' - System
	// * '10' - DownloadPortal
	// * '11' - ExternalAccessPortal
	// * '12' - DayTwo
	//
	EnforcementSource              *EnforcementSource           `json:"enforcementSource,omitempty"`
	ExcludedSrcEntityInfos         []IDNamePair                 `json:"excludedSrcEntityInfos,omitempty"`
	ExcludedSrcProcesses           []string                     `json:"excludedSrcProcesses,omitempty"`
	FallbackToLoggedOnUser         *bool                        `json:"fallbackToLoggedOnUser,omitempty"`
	ID                             *string                      `json:"id,omitempty"`
	IdentityProtectionCategoryList []IdentityProtectionCategory `json:"identityProtectionCategoryList,omitempty"`
	Name                           *string                      `json:"name,omitempty"`
	MfaMethods                     []MfaMethods                 `json:"mfaMethods,omitempty"`
	OverrideBuiltins               *bool                        `json:"overrideBuiltins,omitempty"`
	// 6=TCP, 17=UDP
	ProtocolType                   *ProtocolType `json:"protocolType,omitempty"`
	RestrictToOriginatedUser       *bool         `json:"restrictToOriginatedUser,omitempty"`
	RestrictLoginToOriginatingUser *bool         `json:"restrictLoginToOriginatingUser,omitempty"`
	// * '1' - Hour
	// * '2' - Day
	// * '3' - Week
	// * '4' - Month
	// * '5' - Never
	// * '6' - 4 hours
	// * '7' - 12 hours
	// * '8' - 8 hours
	//
	RuleDuration    *RuleDuration `json:"ruleDuration,omitempty"`
	SrcEntityInfos  []IDNamePair  `json:"srcEntityInfos,omitempty"`
	SrcProcessNames []string      `json:"srcProcessNames,omitempty"`
	SrcUserInfos    []IDNamePair  `json:"srcUserInfos,omitempty"`
	// * '1' - Enabled
	// * '2' - Disabled
	//
	State *ReactivePolicyState `json:"state,omitempty"`
	// Epoch Millis
	UpdatedAt        *int64  `json:"updatedAt,omitempty"`
	UpdatedBy        *string `json:"updatedBy,omitempty"`
	UpdatedByName    *string `json:"updatedByName,omitempty"`
	UseDefaultIdp    *bool   `json:"useDefaultIdp,omitempty"`
	UseOccasionalMfa *bool   `json:"useOccasionalMfa,omitempty"`
}

func (r *ReactivePolicy) GetAdditionalPortsList() []PortsList {
	if r == nil {
		return nil
	}
	return r.AdditionalPortsList
}

func (r *ReactivePolicy) GetCreatedAt() *int64 {
	if r == nil {
		return nil
	}
	return r.CreatedAt
}

func (r *ReactivePolicy) GetCreatedBy() *string {
	if r == nil {
		return nil
	}
	return r.CreatedBy
}

func (r *ReactivePolicy) GetCreatedByName() *string {
	if r == nil {
		return nil
	}
	return r.CreatedByName
}

func (r *ReactivePolicy) GetChangeTicket() *string {
	if r == nil {
		return nil
	}
	return r.ChangeTicket
}

func (r *ReactivePolicy) GetContext() *int64 {
	if r == nil {
		return nil
	}
	return r.Context
}

func (r *ReactivePolicy) GetDescription() *string {
	if r == nil {
		return nil
	}
	return r.Description
}

func (r *ReactivePolicy) GetDstEntityInfo() *IDNamePair {
	if r == nil {
		return nil
	}
	return r.DstEntityInfo
}

func (r *ReactivePolicy) GetDstPort() *string {
	if r == nil {
		return nil
	}
	return r.DstPort
}

func (r *ReactivePolicy) GetDstProcessNames() []string {
	if r == nil {
		return nil
	}
	return r.DstProcessNames
}

func (r *ReactivePolicy) GetEnforcementSource() *EnforcementSource {
	if r == nil {
		return nil
	}
	return r.EnforcementSource
}

func (r *ReactivePolicy) GetExcludedSrcEntityInfos() []IDNamePair {
	if r == nil {
		return nil
	}
	return r.ExcludedSrcEntityInfos
}

func (r *ReactivePolicy) GetExcludedSrcProcesses() []string {
	if r == nil {
		return nil
	}
	return r.ExcludedSrcProcesses
}

func (r *ReactivePolicy) GetFallbackToLoggedOnUser() *bool {
	if r == nil {
		return nil
	}
	return r.FallbackToLoggedOnUser
}

func (r *ReactivePolicy) GetID() *string {
	if r == nil {
		return nil
	}
	return r.ID
}

func (r *ReactivePolicy) GetIdentityProtectionCategoryList() []IdentityProtectionCategory {
	if r == nil {
		return nil
	}
	return r.IdentityProtectionCategoryList
}

func (r *ReactivePolicy) GetName() *string {
	if r == nil {
		return nil
	}
	return r.Name
}

func (r *ReactivePolicy) GetMfaMethods() []MfaMethods {
	if r == nil {
		return nil
	}
	return r.MfaMethods
}

func (r *ReactivePolicy) GetOverrideBuiltins() *bool {
	if r == nil {
		return nil
	}
	return r.OverrideBuiltins
}

func (r *ReactivePolicy) GetProtocolType() *ProtocolType {
	if r == nil {
		return nil
	}
	return r.ProtocolType
}

func (r *ReactivePolicy) GetRestrictToOriginatedUser() *bool {
	if r == nil {
		return nil
	}
	return r.RestrictToOriginatedUser
}

func (r *ReactivePolicy) GetRestrictLoginToOriginatingUser() *bool {
	if r == nil {
		return nil
	}
	return r.RestrictLoginToOriginatingUser
}

func (r *ReactivePolicy) GetRuleDuration() *RuleDuration {
	if r == nil {
		return nil
	}
	return r.RuleDuration
}

func (r *ReactivePolicy) GetSrcEntityInfos() []IDNamePair {
	if r == nil {
		return nil
	}
	return r.SrcEntityInfos
}

func (r *ReactivePolicy) GetSrcProcessNames() []string {
	if r == nil {
		return nil
	}
	return r.SrcProcessNames
}

func (r *ReactivePolicy) GetSrcUserInfos() []IDNamePair {
	if r == nil {
		return nil
	}
	return r.SrcUserInfos
}

func (r *ReactivePolicy) GetState() *ReactivePolicyState {
	if r == nil {
		return nil
	}
	return r.State
}

func (r *ReactivePolicy) GetUpdatedAt() *int64 {
	if r == nil {
		return nil
	}
	return r.UpdatedAt
}

func (r *ReactivePolicy) GetUpdatedBy() *string {
	if r == nil {
		return nil
	}
	return r.UpdatedBy
}

func (r *ReactivePolicy) GetUpdatedByName() *string {
	if r == nil {
		return nil
	}
	return r.UpdatedByName
}

func (r *ReactivePolicy) GetUseDefaultIdp() *bool {
	if r == nil {
		return nil
	}
	return r.UseDefaultIdp
}

func (r *ReactivePolicy) GetUseOccasionalMfa() *bool {
	if r == nil {
		return nil
	}
	return r.UseOccasionalMfa
}
