// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UserRole - * '0' - Unspecified
// * '1' - Admin
// * '2' - Viewer
// * '3' - Regular
// * '4' - API-FullAccess
// * '5' - API-ReadOnly
// * '6' - SelfService
// * '7' - CloudConnectorProvisioning
// * '8' - JAMF Asset
// * '9' - Asset Manager
// * '10' - Operator
// * '11' - Service Now Token
type UserRole int

const (
	UserRoleZero   UserRole = 0
	UserRoleOne    UserRole = 1
	UserRoleTwo    UserRole = 2
	UserRoleThree  UserRole = 3
	UserRoleFour   UserRole = 4
	UserRoleFive   UserRole = 5
	UserRoleSix    UserRole = 6
	UserRoleSeven  UserRole = 7
	UserRoleEight  UserRole = 8
	UserRoleNine   UserRole = 9
	UserRoleTen    UserRole = 10
	UserRoleEleven UserRole = 11
)

func (e UserRole) ToPointer() *UserRole {
	return &e
}
func (e *UserRole) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 7:
		fallthrough
	case 8:
		fallthrough
	case 9:
		fallthrough
	case 10:
		fallthrough
	case 11:
		*e = UserRole(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserRole: %v", v)
	}
}
