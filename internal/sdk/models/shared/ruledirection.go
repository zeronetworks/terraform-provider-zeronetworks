// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuleDirection - * '1' - Inbound
// * '2' - Outbound
// * '3' - Both
type RuleDirection int

const (
	RuleDirectionOne   RuleDirection = 1
	RuleDirectionTwo   RuleDirection = 2
	RuleDirectionThree RuleDirection = 3
)

func (e RuleDirection) ToPointer() *RuleDirection {
	return &e
}
func (e *RuleDirection) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		*e = RuleDirection(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleDirection: %v", v)
	}
}
