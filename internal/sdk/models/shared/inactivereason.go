// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InactiveReason - * '1' - Duplicated in asset repository
// * '2' - Manually set as inactive
// * '3' - None
// * '4' - Disabled in asset repository
// * '5' - Inactive in asset repository
// * '6' - Deleted in asset repository
type InactiveReason int

const (
	InactiveReasonOne   InactiveReason = 1
	InactiveReasonTwo   InactiveReason = 2
	InactiveReasonThree InactiveReason = 3
	InactiveReasonFour  InactiveReason = 4
	InactiveReasonFive  InactiveReason = 5
	InactiveReasonSix   InactiveReason = 6
)

func (e InactiveReason) ToPointer() *InactiveReason {
	return &e
}
func (e *InactiveReason) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		*e = InactiveReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InactiveReason: %v", v)
	}
}
