// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuleClass - * '1' - Trivial
// * '2' - Permissive
// * '3' - Privileged
// * '4' - Critical
// * '5' - System
// * '6' - Preventative
// * '8' - Dangerous
type RuleClass int

const (
	RuleClassOne   RuleClass = 1
	RuleClassTwo   RuleClass = 2
	RuleClassThree RuleClass = 3
	RuleClassFour  RuleClass = 4
	RuleClassFive  RuleClass = 5
	RuleClassSix   RuleClass = 6
	RuleClassEight RuleClass = 8
)

func (e RuleClass) ToPointer() *RuleClass {
	return &e
}
func (e *RuleClass) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 8:
		*e = RuleClass(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleClass: %v", v)
	}
}
