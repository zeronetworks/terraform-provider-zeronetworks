// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/speakeasy/terraform-provider-zeronetworks/internal/sdk/internal/utils"
)

type LocalEntityInfoType string

const (
	LocalEntityInfoTypeAsset LocalEntityInfoType = "asset"
	LocalEntityInfoTypeGroup LocalEntityInfoType = "group"
)

type LocalEntityInfo struct {
	Asset *Asset `queryParam:"inline" name:"localEntityInfo"`
	Group *Group `queryParam:"inline" name:"localEntityInfo"`

	Type LocalEntityInfoType
}

func CreateLocalEntityInfoAsset(asset Asset) LocalEntityInfo {
	typ := LocalEntityInfoTypeAsset

	return LocalEntityInfo{
		Asset: &asset,
		Type:  typ,
	}
}

func CreateLocalEntityInfoGroup(group Group) LocalEntityInfo {
	typ := LocalEntityInfoTypeGroup

	return LocalEntityInfo{
		Group: &group,
		Type:  typ,
	}
}

func (u *LocalEntityInfo) UnmarshalJSON(data []byte) error {

	var asset Asset = Asset{}
	if err := utils.UnmarshalJSON(data, &asset, "", true, nil); err == nil {
		u.Asset = &asset
		u.Type = LocalEntityInfoTypeAsset
		return nil
	}

	var group Group = Group{}
	if err := utils.UnmarshalJSON(data, &group, "", true, nil); err == nil {
		u.Group = &group
		u.Type = LocalEntityInfoTypeGroup
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for LocalEntityInfo", string(data))
}

func (u LocalEntityInfo) MarshalJSON() ([]byte, error) {
	if u.Asset != nil {
		return utils.MarshalJSON(u.Asset, "", true)
	}

	if u.Group != nil {
		return utils.MarshalJSON(u.Group, "", true)
	}

	return nil, errors.New("could not marshal union type LocalEntityInfo: all fields are null")
}

type Rule struct {
	// * 1 - Allow
	// * 2 - Block
	//
	Action          *RuleAction `json:"action,omitempty"`
	AeOverridden    *bool       `json:"aeOverridden,omitempty"`
	ActivitiesCount *int        `json:"activitiesCount,omitempty"`
	// Epoch Millis
	ApprovedAt *int64      `json:"approvedAt,omitempty"`
	ApprovedBy *IDNamePair `json:"approvedBy,omitempty"`
	// Epoch Millis
	CreatedAt    *int64     `json:"createdAt,omitempty"`
	CreatedBy    *CreatedBy `json:"createdBy,omitempty"`
	ChangeTicket *string    `json:"changeTicket,omitempty"`
	Context      *int64     `json:"context,omitempty"`
	// Epoch Millis
	DeletedAt   *int64      `json:"deletedAt,omitempty"`
	DeletedBy   *IDNamePair `json:"deletedBy,omitempty"`
	Description *string     `json:"description,omitempty"`
	// * '1' - Inbound
	// * '2' - Outbound
	// * '3' - Both
	//
	Direction            *RuleDirection `json:"direction,omitempty"`
	ExcludedEntityInfos  []IDNamePair   `json:"excludedEntityInfos,omitempty"`
	ExcludedLocalIdsList []string       `json:"excludedLocalIdsList,omitempty"`
	// Epoch Millis
	ExpiresAt *int64  `json:"expiresAt,omitempty"`
	ID        *string `json:"id,omitempty"`
	// * For allow rule only.
	// * '1' - Off
	// * '2' - Null encapsulation connections
	// * '3' - Authenticated and integrity-protected connections
	// * '4' - Encrypted connections and dynamically negotiate encryption (inbound rule only)
	// * '5' - Encrypted connections
	//
	IPSecOpt                   *IPSecOpt         `json:"ipSecOpt,omitempty"`
	LocalEntityID              *string           `json:"localEntityId,omitempty"`
	LocalProcessesList         []string          `json:"localProcessesList,omitempty"`
	LocalEntityInfos           []LocalEntityInfo `json:"localEntityInfos,omitempty"`
	MultipleLocalEntityIdsList []string          `json:"multipleLocalEntityIdsList,omitempty"`
	Name                       *string           `json:"name,omitempty"`
	ParentID                   *string           `json:"parentId,omitempty"`
	ParentSwitchRuleID         *string           `json:"parentSwitchRuleId,omitempty"`
	ParentSwitchRuleType       *int              `json:"parentSwitchRuleType,omitempty"`
	ParentType                 *int              `json:"parentType,omitempty"`
	PortsList                  []PortsList       `json:"portsList,omitempty"`
	RemoteEntityIdsList        []string          `json:"remoteEntityIdsList,omitempty"`
	RemoteEntityInfos          []IDNamePair      `json:"remoteEntityInfos,omitempty"`
	// * '1' - Trivial
	// * '2' - Permissive
	// * '3' - Privileged
	// * '4' - Critical
	// * '5' - System
	// * '6' - Preventative
	// * '8' - Dangerous
	//
	Ruleclass *RuleClass `json:"ruleclass,omitempty"`
	// Mandatory object for rule review approve_with_changes / reject.
	//
	// reason: {
	//     HUMAN_TRAFFIC_COVERED_BY_MFA = 1,
	//     TIGHTEN_RULE_SCOPE = 2,
	//     MISSING_PORT_OR_PROCESS = 3,
	//     AFFECTED_ENTITIES_CONTAINED_IN_AN_EXISTING_GROUP = 4,
	//     REDUNDANT_RULE = 5,
	//     TRAFFIC_SHOULD_BE_BLOCKED = 6,
	//     OTHER = 7
	// }
	RuleReview   *RuleReviewReason `json:"ruleReview,omitempty"`
	ServicesList []string          `json:"servicesList,omitempty"`
	SrcUsersList []SrcUsersList    `json:"srcUsersList,omitempty"`
	// * '1' - Enabled
	// * '2' - Disabled
	// * '3' - Deleted By User
	// * '4' - Pending Review
	// * '5' - Pending Review Auto
	// * '6' - Rejected by User
	// * '7' - Excluded by User
	//
	State *RuleState `json:"state,omitempty"`
	// Epoch Millis
	UpdatedAt       *int64      `json:"updatedAt,omitempty"`
	UpdatedBy       *IDNamePair `json:"updatedBy,omitempty"`
	IsRejectOnLinux *bool       `json:"isRejectOnLinux,omitempty"`
}

func (o *Rule) GetAction() *RuleAction {
	if o == nil {
		return nil
	}
	return o.Action
}

func (o *Rule) GetAeOverridden() *bool {
	if o == nil {
		return nil
	}
	return o.AeOverridden
}

func (o *Rule) GetActivitiesCount() *int {
	if o == nil {
		return nil
	}
	return o.ActivitiesCount
}

func (o *Rule) GetApprovedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.ApprovedAt
}

func (o *Rule) GetApprovedBy() *IDNamePair {
	if o == nil {
		return nil
	}
	return o.ApprovedBy
}

func (o *Rule) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Rule) GetCreatedBy() *CreatedBy {
	if o == nil {
		return nil
	}
	return o.CreatedBy
}

func (o *Rule) GetChangeTicket() *string {
	if o == nil {
		return nil
	}
	return o.ChangeTicket
}

func (o *Rule) GetContext() *int64 {
	if o == nil {
		return nil
	}
	return o.Context
}

func (o *Rule) GetDeletedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.DeletedAt
}

func (o *Rule) GetDeletedBy() *IDNamePair {
	if o == nil {
		return nil
	}
	return o.DeletedBy
}

func (o *Rule) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Rule) GetDirection() *RuleDirection {
	if o == nil {
		return nil
	}
	return o.Direction
}

func (o *Rule) GetExcludedEntityInfos() []IDNamePair {
	if o == nil {
		return nil
	}
	return o.ExcludedEntityInfos
}

func (o *Rule) GetExcludedLocalIdsList() []string {
	if o == nil {
		return nil
	}
	return o.ExcludedLocalIdsList
}

func (o *Rule) GetExpiresAt() *int64 {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}

func (o *Rule) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Rule) GetIPSecOpt() *IPSecOpt {
	if o == nil {
		return nil
	}
	return o.IPSecOpt
}

func (o *Rule) GetLocalEntityID() *string {
	if o == nil {
		return nil
	}
	return o.LocalEntityID
}

func (o *Rule) GetLocalProcessesList() []string {
	if o == nil {
		return nil
	}
	return o.LocalProcessesList
}

func (o *Rule) GetLocalEntityInfos() []LocalEntityInfo {
	if o == nil {
		return nil
	}
	return o.LocalEntityInfos
}

func (o *Rule) GetMultipleLocalEntityIdsList() []string {
	if o == nil {
		return nil
	}
	return o.MultipleLocalEntityIdsList
}

func (o *Rule) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Rule) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *Rule) GetParentSwitchRuleID() *string {
	if o == nil {
		return nil
	}
	return o.ParentSwitchRuleID
}

func (o *Rule) GetParentSwitchRuleType() *int {
	if o == nil {
		return nil
	}
	return o.ParentSwitchRuleType
}

func (o *Rule) GetParentType() *int {
	if o == nil {
		return nil
	}
	return o.ParentType
}

func (o *Rule) GetPortsList() []PortsList {
	if o == nil {
		return nil
	}
	return o.PortsList
}

func (o *Rule) GetRemoteEntityIdsList() []string {
	if o == nil {
		return nil
	}
	return o.RemoteEntityIdsList
}

func (o *Rule) GetRemoteEntityInfos() []IDNamePair {
	if o == nil {
		return nil
	}
	return o.RemoteEntityInfos
}

func (o *Rule) GetRuleclass() *RuleClass {
	if o == nil {
		return nil
	}
	return o.Ruleclass
}

func (o *Rule) GetRuleReview() *RuleReviewReason {
	if o == nil {
		return nil
	}
	return o.RuleReview
}

func (o *Rule) GetServicesList() []string {
	if o == nil {
		return nil
	}
	return o.ServicesList
}

func (o *Rule) GetSrcUsersList() []SrcUsersList {
	if o == nil {
		return nil
	}
	return o.SrcUsersList
}

func (o *Rule) GetState() *RuleState {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *Rule) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *Rule) GetUpdatedBy() *IDNamePair {
	if o == nil {
		return nil
	}
	return o.UpdatedBy
}

func (o *Rule) GetIsRejectOnLinux() *bool {
	if o == nil {
		return nil
	}
	return o.IsRejectOnLinux
}
