// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuleDuration - * '1' - Hour
// * '2' - Day
// * '3' - Week
// * '4' - Month
// * '5' - Never
// * '6' - 4 hours
// * '7' - 12 hours
// * '8' - 8 hours
type RuleDuration int

const (
	RuleDurationOne   RuleDuration = 1
	RuleDurationTwo   RuleDuration = 2
	RuleDurationThree RuleDuration = 3
	RuleDurationFour  RuleDuration = 4
	RuleDurationFive  RuleDuration = 5
	RuleDurationSix   RuleDuration = 6
	RuleDurationSeven RuleDuration = 7
	RuleDurationEight RuleDuration = 8
)

func (e RuleDuration) ToPointer() *RuleDuration {
	return &e
}
func (e *RuleDuration) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 7:
		fallthrough
	case 8:
		*e = RuleDuration(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleDuration: %v", v)
	}
}
