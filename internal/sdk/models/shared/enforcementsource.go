// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnforcementSource - * '1' - ReactivePolicy
// * '2' - Automated
// * '3' - AccessPortal
// * '4' - AdminPortal
// * '5' - AI
// * '6' - API
// * '7' - Setup
// * '8' - Connect
// * '9' - System
// * '10' - DownloadPortal
// * '11' - ExternalAccessPortal
// * '12' - DayTwo
type EnforcementSource int

const (
	EnforcementSourceOne    EnforcementSource = 1
	EnforcementSourceTwo    EnforcementSource = 2
	EnforcementSourceThree  EnforcementSource = 3
	EnforcementSourceFour   EnforcementSource = 4
	EnforcementSourceFive   EnforcementSource = 5
	EnforcementSourceSix    EnforcementSource = 6
	EnforcementSourceSeven  EnforcementSource = 7
	EnforcementSourceEight  EnforcementSource = 8
	EnforcementSourceNine   EnforcementSource = 9
	EnforcementSourceTen    EnforcementSource = 10
	EnforcementSourceEleven EnforcementSource = 11
	EnforcementSourceTwelve EnforcementSource = 12
)

func (e EnforcementSource) ToPointer() *EnforcementSource {
	return &e
}
func (e *EnforcementSource) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 7:
		fallthrough
	case 8:
		fallthrough
	case 9:
		fallthrough
	case 10:
		fallthrough
	case 11:
		fallthrough
	case 12:
		*e = EnforcementSource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnforcementSource: %v", v)
	}
}
