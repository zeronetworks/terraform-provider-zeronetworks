// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"fmt"
	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/hashicorp/terraform-plugin-framework/types/basetypes"
	tfTypes "github.com/zeronetworks/terraform-provider-zeronetworks/internal/provider/types"
	"github.com/zeronetworks/terraform-provider-zeronetworks/internal/sdk"
)

// Ensure provider defined types fully satisfy framework interfaces.
var _ datasource.DataSource = &OutboundRuleDataSource{}
var _ datasource.DataSourceWithConfigure = &OutboundRuleDataSource{}

func NewOutboundRuleDataSource() datasource.DataSource {
	return &OutboundRuleDataSource{}
}

// OutboundRuleDataSource is the data source implementation.
type OutboundRuleDataSource struct {
	// Provider configured SDK client.
	client *sdk.ZeroNetworks
}

// OutboundRuleDataSourceModel describes the data model.
type OutboundRuleDataSourceModel struct {
	Action                     types.Int32               `tfsdk:"action"`
	ActivitiesCount            types.Int32               `tfsdk:"activities_count"`
	AeOverridden               types.Bool                `tfsdk:"ae_overridden"`
	ApprovedAt                 types.Int64               `tfsdk:"approved_at"`
	ApprovedBy                 *tfTypes.IDNamePair1      `tfsdk:"approved_by"`
	ChangeTicket               types.String              `tfsdk:"change_ticket"`
	Context                    types.Int64               `tfsdk:"context"`
	CreatedAt                  types.Int64               `tfsdk:"created_at"`
	CreatedBy                  *tfTypes.CreatedBy        `tfsdk:"created_by"`
	DeletedAt                  types.Int64               `tfsdk:"deleted_at"`
	DeletedBy                  *tfTypes.IDNamePair1      `tfsdk:"deleted_by"`
	Description                types.String              `tfsdk:"description"`
	Direction                  types.Int32               `tfsdk:"direction"`
	ExcludedEntityInfos        []tfTypes.IDNamePair1     `tfsdk:"excluded_entity_infos"`
	ExcludedLocalIdsList       []types.String            `tfsdk:"excluded_local_ids_list"`
	ExpiresAt                  types.Int64               `tfsdk:"expires_at"`
	ID                         types.String              `tfsdk:"id"`
	IPSecOpt                   types.Int32               `tfsdk:"ip_sec_opt"`
	IsRejectOnLinux            types.Bool                `tfsdk:"is_reject_on_linux"`
	LocalEntityID              types.String              `tfsdk:"local_entity_id"`
	LocalEntityInfos           []tfTypes.LocalEntityInfo `tfsdk:"local_entity_infos"`
	LocalProcessesList         []types.String            `tfsdk:"local_processes_list"`
	MultipleLocalEntityIdsList []types.String            `tfsdk:"multiple_local_entity_ids_list"`
	Name                       types.String              `tfsdk:"name"`
	ParentID                   types.String              `tfsdk:"parent_id"`
	ParentSwitchRuleID         types.String              `tfsdk:"parent_switch_rule_id"`
	ParentSwitchRuleType       types.Int32               `tfsdk:"parent_switch_rule_type"`
	ParentType                 types.Int32               `tfsdk:"parent_type"`
	PortsList                  []tfTypes.PortsList       `tfsdk:"ports_list"`
	RemoteEntityIdsList        []types.String            `tfsdk:"remote_entity_ids_list"`
	RemoteEntityInfos          []tfTypes.IDNamePair1     `tfsdk:"remote_entity_infos"`
	RuleReview                 *tfTypes.RuleReviewReason `tfsdk:"rule_review"`
	Ruleclass                  types.Int32               `tfsdk:"ruleclass"`
	ServicesList               []types.String            `tfsdk:"services_list"`
	SrcUsersList               []tfTypes.SrcUsersList    `tfsdk:"src_users_list"`
	State                      types.Int32               `tfsdk:"state"`
	UpdatedAt                  types.Int64               `tfsdk:"updated_at"`
	UpdatedBy                  *tfTypes.IDNamePair1      `tfsdk:"updated_by"`
}

// Metadata returns the data source type name.
func (r *OutboundRuleDataSource) Metadata(ctx context.Context, req datasource.MetadataRequest, resp *datasource.MetadataResponse) {
	resp.TypeName = req.ProviderTypeName + "_outbound_rule"
}

// Schema defines the schema for the data source.
func (r *OutboundRuleDataSource) Schema(ctx context.Context, req datasource.SchemaRequest, resp *datasource.SchemaResponse) {
	resp.Schema = schema.Schema{
		MarkdownDescription: "OutboundRule DataSource",

		Attributes: map[string]schema.Attribute{
			"action": schema.Int32Attribute{
				Computed: true,
				MarkdownDescription: `* 1 - Allow` + "\n" +
					`* 2 - Block`,
			},
			"activities_count": schema.Int32Attribute{
				Computed: true,
			},
			"ae_overridden": schema.BoolAttribute{
				Computed: true,
			},
			"approved_at": schema.Int64Attribute{
				Computed:    true,
				Description: `Epoch Millis`,
			},
			"approved_by": schema.SingleNestedAttribute{
				Computed: true,
				Attributes: map[string]schema.Attribute{
					"id": schema.StringAttribute{
						Computed:    true,
						Description: `EntityId`,
					},
					"name": schema.StringAttribute{
						Computed:    true,
						Description: `Entity Name`,
					},
				},
			},
			"change_ticket": schema.StringAttribute{
				Computed: true,
			},
			"context": schema.Int64Attribute{
				Computed: true,
			},
			"created_at": schema.Int64Attribute{
				Computed:    true,
				Description: `Epoch Millis`,
			},
			"created_by": schema.SingleNestedAttribute{
				Computed: true,
				Attributes: map[string]schema.Attribute{
					"created_by": schema.SingleNestedAttribute{
						Computed: true,
						Attributes: map[string]schema.Attribute{
							"id": schema.StringAttribute{
								Computed:    true,
								Description: `EntityId`,
							},
							"name": schema.StringAttribute{
								Computed:    true,
								Description: `Entity Name`,
							},
						},
					},
					"email": schema.StringAttribute{
						Computed: true,
					},
					"enforcement_source": schema.Int32Attribute{
						Computed: true,
						MarkdownDescription: `* '1' - ReactivePolicy` + "\n" +
							`* '2' - Automated` + "\n" +
							`* '3' - AccessPortal` + "\n" +
							`* '4' - AdminPortal` + "\n" +
							`* '5' - AI` + "\n" +
							`* '6' - API` + "\n" +
							`* '7' - Setup` + "\n" +
							`* '8' - Connect` + "\n" +
							`* '9' - System` + "\n" +
							`* '10' - DownloadPortal` + "\n" +
							`* '11' - ExternalAccessPortal` + "\n" +
							`* '12' - DayTwo`,
					},
					"user_role": schema.Int32Attribute{
						Computed: true,
						MarkdownDescription: `* '0' - Unspecified` + "\n" +
							`* '1' - Admin` + "\n" +
							`* '2' - Viewer` + "\n" +
							`* '3' - Regular` + "\n" +
							`* '4' - API-FullAccess` + "\n" +
							`* '5' - API-ReadOnly` + "\n" +
							`* '6' - SelfService` + "\n" +
							`* '7' - CloudConnectorProvisioning` + "\n" +
							`* '8' - JAMF Asset` + "\n" +
							`* '9' - Asset Manager` + "\n" +
							`* '10' - Operator` + "\n" +
							`* '11' - Service Now Token`,
					},
				},
			},
			"deleted_at": schema.Int64Attribute{
				Computed:    true,
				Description: `Epoch Millis`,
			},
			"deleted_by": schema.SingleNestedAttribute{
				Computed: true,
				Attributes: map[string]schema.Attribute{
					"id": schema.StringAttribute{
						Computed:    true,
						Description: `EntityId`,
					},
					"name": schema.StringAttribute{
						Computed:    true,
						Description: `Entity Name`,
					},
				},
			},
			"description": schema.StringAttribute{
				Computed: true,
			},
			"direction": schema.Int32Attribute{
				Computed: true,
				MarkdownDescription: `* '1' - Inbound` + "\n" +
					`* '2' - Outbound` + "\n" +
					`* '3' - Both`,
			},
			"excluded_entity_infos": schema.ListNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"id": schema.StringAttribute{
							Computed:    true,
							Description: `EntityId`,
						},
						"name": schema.StringAttribute{
							Computed:    true,
							Description: `Entity Name`,
						},
					},
				},
			},
			"excluded_local_ids_list": schema.ListAttribute{
				Computed:    true,
				ElementType: types.StringType,
			},
			"expires_at": schema.Int64Attribute{
				Computed:    true,
				Description: `Epoch Millis`,
			},
			"id": schema.StringAttribute{
				Required:    true,
				Description: `The id of the rule`,
			},
			"ip_sec_opt": schema.Int32Attribute{
				Computed: true,
				MarkdownDescription: `* For allow rule only.` + "\n" +
					`* '1' - Off` + "\n" +
					`* '2' - Null encapsulation connections` + "\n" +
					`* '3' - Authenticated and integrity-protected connections` + "\n" +
					`* '4' - Encrypted connections and dynamically negotiate encryption (inbound rule only)` + "\n" +
					`* '5' - Encrypted connections`,
			},
			"is_reject_on_linux": schema.BoolAttribute{
				Computed: true,
			},
			"local_entity_id": schema.StringAttribute{
				Computed: true,
			},
			"local_entity_infos": schema.ListNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"asset": schema.SingleNestedAttribute{
							Computed: true,
							Attributes: map[string]schema.Attribute{
								"asset_status": schema.Int64Attribute{
									Computed: true,
									MarkdownDescription: `Possible asset status:` + "\n" +
										`  * '1' - Not monitored` + "\n" +
										`  * '2' - Segment server` + "\n" +
										`  * '4' - Can't be monitored (unsupported OS)` + "\n" +
										`  * '5' - Can't be monitored (unmonitorable)` + "\n" +
										`  * '6' - Can't be monitored (unmonitorable)` + "\n" +
										`  * '7' - Cloud connector` + "\n" +
										`  * '8' - Not monitored (ansible unreachable)` + "\n" +
										`  * '9' - Not monitored (cloud connector uninstalled)` + "\n" +
										`  * '10' - Not monitored (cloud connector required)` + "\n" +
										`  * '12' - Can't be monitored (inactive entity)` + "\n" +
										`  * '13' - Stalked Externally` + "\n" +
										`  * '14' - Lightweight Agent`,
								},
								"asset_type": schema.Int32Attribute{
									Computed: true,
									MarkdownDescription: `Possible asset status:` + "\n" +
										`  * '0' - Unknown` + "\n" +
										`  * '1' - Client` + "\n" +
										`  * '2' - Server` + "\n" +
										`  * '3' - Virtual cluster` + "\n" +
										`  * '4' - IP camera` + "\n" +
										`  * '5' - Smart TV` + "\n" +
										`  * '6' - Factory controller` + "\n" +
										`  * '7' - Medical device` + "\n" +
										`  * '8' - Printer` + "\n" +
										`  * '9' - Scanner` + "\n" +
										`  * '10' - Smart card reader` + "\n" +
										`  * '11' - Router` + "\n" +
										`  * '12' - Hypervisor` + "\n" +
										`  * '13' - PLC` + "\n" +
										`  * '14' - HMI` + "\n" +
										`  * '15' - Switch` + "\n" +
										`  * '16' - Terminal station` + "\n" +
										`  * '17' - RTU` + "\n" +
										`  * '18' - Wireless access point` + "\n" +
										`  * '19' - Historian` + "\n" +
										`  * '20' - Game console` + "\n" +
										`  * '21' - Fire alarm` + "\n" +
										`  * '22' - UPS` + "\n" +
										`  * '23' - Storage appliance` + "\n" +
										`  * '24' - Virtualization appliance` + "\n" +
										`  * '25' - Firewall appliance` + "\n" +
										`  * '26' - Security scanner` + "\n" +
										`  * '27' - Security controller` + "\n" +
										`  * '28 ' - Door lock` + "\n" +
										`  * '29' - Biometric entry system` + "\n" +
										`  * '30' - HVAC` + "\n" +
										`  * '31' - Room scheduler` + "\n" +
										`  * '32' - Load Balancer Appliance` + "\n" +
										`  * '33' - WAN Concentrator` + "\n" +
										`  * '34' - IPAM Appliance` + "\n" +
										`  * '35' - TEMPERATURE SENSOR GATEWAY` + "\n" +
										`  * '36' - POWER METER` + "\n" +
										`  * '37' - CONVEYOR SYSTEM` + "\n" +
										`  * '38' - BUILDING AUTOMATION DEVICE` + "\n" +
										`  * '39' - VISION CONTROLLER` + "\n" +
										`  * '40' - MANUFACTURING EXECUTION SYSTEM` + "\n" +
										`  * '41' - BACNET BROADCAST MANAGEMENT DEVICE BBMD` + "\n" +
										`  * '42' - BACNET ROUTER AND BBMD` + "\n" +
										`  * '43' - CLOCK` + "\n" +
										`  * '44' - RFID` + "\n" +
										`  * '45' - SCALE` + "\n" +
										`  * '46' - MOBILE PRINTER` + "\n" +
										`  * '47' - IED` + "\n" +
										`  * '48' - CNC MILL` + "\n" +
										`  * '49' - ROOM MONITOR` + "\n" +
										`  * '50' - SMART SPEAKER` + "\n" +
										`  * '51' - VENDING MACHINE` + "\n" +
										`  * '52' - AUTONOMOUS VEHICLE` + "\n" +
										`  * '53' - FLEET MANAGEMENT SYSTEM` + "\n" +
										`  * '54' - BACNET ROUTER` + "\n" +
										`  * '55' - MOTOR CONTROLLER` + "\n" +
										`  * '56' - OT GATEWAY` + "\n" +
										`  * '57' - CONTROLLER` + "\n" +
										`  * '58' - BUILDING MANAGEMENT SYSTEM` + "\n" +
										`  * '59' - VOIP PHONE` + "\n" +
										`  * '60' - VISION SENSOR` + "\n" +
										`  * '61' - REMOTE IO` + "\n" +
										`  * '62' - VOIP SERVER` + "\n" +
										`  * '63' - FLOW METER` + "\n" +
										`  * '64' - BUILDING AUTOMATION CONTROLLER` + "\n" +
										`  * '65' - SECURITY CAMERA` + "\n" +
										`  * '66' - DIGITAL SIGN` + "\n" +
										`  * '67' - REMOTE ACCESS GATEWAY` + "\n" +
										`  * '68' - TEMPERATURE SENSOR` + "\n" +
										`  * '69' - RTLS` + "\n" +
										`  * '70' - SERIAL TO ETHERNET` + "\n" +
										`  * '71' - INTERCOM` + "\n" +
										`  * '72' - ENGINEERING STATION` + "\n" +
										`  * '73' - DATA LOGGER GATEWAY` + "\n" +
										`  * '74' - ROBOT` + "\n" +
										`  * '75' - TABLET` + "\n" +
										`  * '76' - SCADA SERVER` + "\n" +
										`  * '77' - INDUSTRIAL PRINTER` + "\n" +
										`  * '78' - VISION CAMERA` + "\n" +
										`  * '79' - TIME CLOCK` + "\n" +
										`  * '80' - VIDEO CONFERENCE` + "\n" +
										`  * '81' - ELECTRICAL DRIVE` + "\n" +
										`  * '82' - ACCESS CONTROL` + "\n" +
										`  * '83' - PRINTER 3D` + "\n" +
										`  * '84' - ACCESS CONTROL GATEWAY` + "\n" +
										`  * '85' - ATM` + "\n" +
										`  * '86' - AUDIO DECODER` + "\n" +
										`  * '87' - AV SYSTEM` + "\n" +
										`  * '88' - BACNET ROUTER BBMD` + "\n" +
										`  * '89' - BADGE READER` + "\n" +
										`  * '90' - BARCODE SCANNER` + "\n" +
										`  * '91' - BUILDING AUTOMATION CONTROLLER GATEWAY` + "\n" +
										`  * '92' - BUILDING MANAGEMENT SENSOR` + "\n" +
										`  * '93' - BUILDING MANAGEMENT SENSOR GATEWAY` + "\n" +
										`  * '94' - BUILDING MANAGEMENT SYSTEM GATEWAY` + "\n" +
										`  * '95' - CAR` + "\n" +
										`  * '96' - CIRCUIT MONITOR` + "\n" +
										`  * '97' - CLINICAL MOBILE DEVICE` + "\n" +
										`  * '98' - CLINICAL MOBILE DEVICE GATEWAY` + "\n" +
										`  * '99' - CLOCK GATEWAY` + "\n" +
										`  * '100' - CNC SYSTEM` + "\n" +
										`  * '101' - CONFERENCE ROOM` + "\n" +
										`  * '102' - DATA LOGGER` + "\n" +
										`  * '103' - DIGITAL SIGN WORKSTATION` + "\n" +
										`  * '104' - DISK PUBLISHER` + "\n" +
										`  * '105' - DISPATCHER` + "\n" +
										`  * '106' - EMBEDDED PC` + "\n" +
										`  * '107' - ENCODER` + "\n" +
										`  * '108' - EV CHARGING` + "\n" +
										`  * '109' - FITNESS DEVICE` + "\n" +
										`  * '110' - GENERIC MOBILE DEVICE` + "\n" +
										`  * '111' - GPS NAVIGATOR` + "\n" +
										`  * '112' - INDUSTRIAL BARCODE SCANNER` + "\n" +
										`  * '113' - INDUSTRIAL METAL DETECTOR` + "\n" +
										`  * '114' - INDUSTRIAL NETWORK EQUIPMENT` + "\n" +
										`  * '115' - INDUSTRIAL THIN CLIENT` + "\n" +
										`  * '116' - INDUSTRIAL THIN CLIENT GATEWAY` + "\n" +
										`  * '117' - INDUSTRIAL WIRELESS` + "\n" +
										`  * '118' - INDUSTRIAL WORKSTATION` + "\n" +
										`  * '119' - INSPECTION SYSTEM` + "\n" +
										`  * '120' - INTERACTIVE VOICE RESPONSE` + "\n" +
										`  * '121' - INTERCOM GATEWAY` + "\n" +
										`  * '122' - IOT CONTROLLER` + "\n" +
										`  * '123' - LOCK BOX` + "\n" +
										`  * '124' - MACHINERY HEALTH ANALYZER` + "\n" +
										`  * '125' - MAILING SYSTEM` + "\n" +
										`  * '126' - MEDIA GATEWAY` + "\n" +
										`  * '127' - MEDIA PLAYER` + "\n" +
										`  * '128' - MEDIA STREAMER` + "\n" +
										`  * '129' - MICROSCOPE` + "\n" +
										`  * '130' - MOBILE COMPUTER` + "\n" +
										`  * '131' - MOTOR STARTER` + "\n" +
										`  * '132' - MUSICAL INSTRUMENT` + "\n" +
										`  * '133' - OPC SERVER` + "\n" +
										`  * '134' - ORDER FULFILLMENT SYSTEM` + "\n" +
										`  * '135' - OT DEVICE` + "\n" +
										`  * '136' - OT SERVER` + "\n" +
										`  * '137' - PA SYSTEM` + "\n" +
										`  * '138' - PAYMENT KIOSK` + "\n" +
										`  * '139' - PHYSICAL SECURITY PLATFORM` + "\n" +
										`  * '140' - POINT OF SALE` + "\n" +
										`  * '141' - POINT OF SALE GATEWAY` + "\n" +
										`  * '142' - POWER DISTRIBUTION UNIT` + "\n" +
										`  * '143' - POWER DISTRIBUTION UNIT GATEWAY` + "\n" +
										`  * '144' - POWER SUPPLY` + "\n" +
										`  * '145' - PRINT SERVER` + "\n" +
										`  * '146' - PROJECTOR` + "\n" +
										`  * '147' - RADIO` + "\n" +
										`  * '148' - RADIO REPEATER` + "\n" +
										`  * '149' - RECORDING SERVER` + "\n" +
										`  * '150' - REPORTING SERVER` + "\n" +
										`  * '151' - ROOM AUTOMATION STATION` + "\n" +
										`  * '152' - ROOM DISPLAY` + "\n" +
										`  * '153' - RTLS GATEWAY` + "\n" +
										`  * '154' - SAFETY SYSTEM` + "\n" +
										`  * '155' - SCADA CLIENT` + "\n" +
										`  * '156' - SCREEN SHARE` + "\n" +
										`  * '157' - SECURITY XRAY SCANNER` + "\n" +
										`  * '158' - SENSOR` + "\n" +
										`  * '159' - SERIAL TO ETHERNET GATEWAY` + "\n" +
										`  * '160' - SERVICE TROLLEY` + "\n" +
										`  * '161' - SMART BOARD` + "\n" +
										`  * '162' - SMART HOME` + "\n" +
										`  * '163' - SMART LIGHT` + "\n" +
										`  * '164' - SMART LIGHT GATEWAY` + "\n" +
										`  * '165' - SMART LOCK CONTROLLER` + "\n" +
										`  * '166' - SMARTPHONE` + "\n" +
										`  * '167' - SMARTWATCH` + "\n" +
										`  * '168' - SOLAR ENERGY` + "\n" +
										`  * '169' - TIME CLOCK GATEWAY` + "\n" +
										`  * '170' - VIDEO CONFERENCE GATEWAY` + "\n" +
										`  * '171' - VIDEO DECODER` + "\n" +
										`  * '172' - VIDEO ENCODER` + "\n" +
										`  * '173' - VIDEO SURVEILLANCE DEVICE` + "\n" +
										`  * '174' - VOIP ADAPTER` + "\n" +
										`  * '175' - VOIP PHONE GATEWAY` + "\n" +
										`  * '176' - WATER SYSTEM` + "\n" +
										`  * '177' - WIRELESS PHONE` + "\n" +
										`  * '178' - WIRELESS PHONE GATEWAY` + "\n" +
										`  * '1001' - OTHER OT`,
								},
								"assigned_deployment_id": schema.StringAttribute{
									Computed: true,
								},
								"break_glass_activated": schema.BoolAttribute{
									Computed: true,
								},
								"domain": schema.StringAttribute{
									Computed: true,
								},
								"external_device_id": schema.StringAttribute{
									Computed: true,
								},
								"fqdn": schema.StringAttribute{
									Computed: true,
								},
								"has_dns": schema.BoolAttribute{
									Computed: true,
								},
								"health_state": schema.SingleNestedAttribute{
									Computed: true,
									Attributes: map[string]schema.Attribute{
										"health_issues_list": schema.ListNestedAttribute{
											Computed: true,
											NestedObject: schema.NestedAttributeObject{
												Attributes: map[string]schema.Attribute{
													"details": schema.StringAttribute{
														Computed: true,
													},
													"issue_code": schema.Int32Attribute{
														Computed: true,
														MarkdownDescription: `* '0' - Unspecified` + "\n" +
															`* '1' - Unknown` + "\n" +
															`* '2' - Access Denied` + "\n" +
															`* '3' - IO Device Issue` + "\n" +
															`* '4' - DotNet 3.5` + "\n" +
															`* '5' - WMI Corrupted` + "\n" +
															`* '6' - URL Filtering` + "\n" +
															`* '7' - Out of Space` + "\n" +
															`* '8' - Unsupported HMAC` + "\n" +
															`* '9' - Unsupported Encryption` + "\n" +
															`* '10' - Setup Script Failed` + "\n" +
															`* '11' - Slow MFA` + "\n" +
															`* '12' - Unexpted GPO Rules` + "\n" +
															`* '13' - Zero Networks GPO Rule Mismatch` + "\n" +
															`* '14' - Audit Mismatch` + "\n" +
															`* '15' - Asset ID Mismatch` + "\n" +
															`* '16' - Unsupported HTTP Version` + "\n" +
															`* '17' - Registry Marked for Deletion` + "\n" +
															`* '18' - Unable to add to automation group` + "\n" +
															`* '19' - Incorrect Username or Password` + "\n" +
															`* '20' - RPC Open Source Installed` + "\n" +
															`* '21' - Timeout during initialization` + "\n" +
															`* '22' - Data collection timeout` + "\n" +
															`* '23' - Not in Sudoers` + "\n" +
															`* '24' - Invalid SSH Key` + "\n" +
															`* '25' - Events Unavailable` + "\n" +
															`* '26' - SSH Password Incorrect` + "\n" +
															`* '27' - SSH Password Expired` + "\n" +
															`* '28' - Segmneted Users not found` + "\n" +
															`* '29' - Unsupported Python Versions` + "\n" +
															`* '30' - Cound not query segmented users` + "\n" +
															`* '31' - Switch unreachable` + "\n" +
															`* '32' - Switch communication issue` + "\n" +
															`* '33' - Interface protection resource exceeded` + "\n" +
															`* '34' - Unsupported Package Manager` + "\n" +
															`* '35' - Firewall disabled by GPO` + "\n" +
															`* '36' - Linux firewall logs oversized` + "\n" +
															`* '1000' - First blocker issue code` + "\n" +
															`* '1001' - Cluster node ipv6 disabled` + "\n" +
															`* '1002' - Local rules merge disallowed`,
													},
												},
											},
										},
										"health_status": schema.Int32Attribute{
											Computed: true,
											MarkdownDescription: `* '0' - Unspecified` + "\n" +
												`* '1' - Healthy` + "\n" +
												`* '2' - Error` + "\n" +
												`* '3' - Warning` + "\n" +
												`* '4' - N/A` + "\n" +
												`* '5' - Retrying` + "\n" +
												`* '6' - Blocker`,
										},
									},
								},
								"id": schema.StringAttribute{
									Computed: true,
								},
								"identity_protect_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"identity_protected_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"identity_protection_state": schema.Int64Attribute{
									Computed: true,
								},
								"inactive_reason": schema.Int32Attribute{
									Computed: true,
									MarkdownDescription: `* '1' - Duplicated in asset repository` + "\n" +
										`* '2' - Manually set as inactive` + "\n" +
										`* '3' - None` + "\n" +
										`* '4' - Disabled in asset repository` + "\n" +
										`* '5' - Inactive in asset repository` + "\n" +
										`* '6' - Deleted in asset repository`,
								},
								"inactive_since": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"ip_v4_addresses": schema.ListAttribute{
									Computed:    true,
									ElementType: types.StringType,
								},
								"ip_v6_addresses": schema.ListAttribute{
									Computed:    true,
									ElementType: types.StringType,
								},
								"is_quarantined": schema.BoolAttribute{
									Computed: true,
								},
								"last_logon": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"manufacturer": schema.StringAttribute{
									Computed: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
								},
								"operating_system": schema.StringAttribute{
									Computed: true,
								},
								"os_type": schema.Int64Attribute{
									Computed: true,
								},
								"ot_locattion": schema.SingleNestedAttribute{
									Computed: true,
									Attributes: map[string]schema.Attribute{
										"interface_name": schema.StringAttribute{
											Computed: true,
										},
										"name": schema.StringAttribute{
											Computed: true,
										},
										"switch_id": schema.StringAttribute{
											Computed: true,
										},
									},
								},
								"outbound_restriction": schema.Int64Attribute{
									Computed: true,
								},
								"password_update_time": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"preferred_deployment_id": schema.StringAttribute{
									Computed: true,
								},
								"principal_name": schema.StringAttribute{
									Computed: true,
								},
								"protect_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"protected_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"protection_state": schema.Int32Attribute{
									Computed: true,
									MarkdownDescription: `* '0' - Unspecified` + "\n" +
										`* '1' - Unsegmented` + "\n" +
										`* '2' - Unsegmenting` + "\n" +
										`* '3' - Segmented` + "\n" +
										`* '4' - Segmenting` + "\n" +
										`* '5' - Learning until` + "\n" +
										`* '6' - forced_unprotected` + "\n" +
										`* '7' - Unsegmenting' - Due to Policy` + "\n" +
										`* '8' - Segmented' - Due to Policy` + "\n" +
										`* '9' - Segmenting- Due to Policy` + "\n" +
										`* '10' - Learning until' - Due to Policy` + "\n" +
										`* '11' - Learning done` + "\n" +
										`* '12' - Learning done- Due to Policy` + "\n" +
										`* '13' - APPLYING_QUEUE_WITH_BLOCKS` + "\n" +
										`* '14' - APPLYING_QUEUE_WITH_BLOCKS_DUE_TO_POLICY` + "\n" +
										`* '15' - QUEUED_WITH_BLOCKS` + "\n" +
										`* '16' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY` + "\n" +
										`* '17' - QUEUED_WITH_BLOCKS_DONE` + "\n" +
										`* '18' - QUEUED_WITH_BLOCKS_DUE_TO_POLICY_DONE`,
								},
								"purdue_level": schema.Int64Attribute{
									Computed: true,
								},
								"rpc_monitored": schema.BoolAttribute{
									Computed: true,
								},
								"rpc_protect_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"rpc_protected_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"rpc_protection_state": schema.Int64Attribute{
									Computed: true,
								},
								"source": schema.Int32Attribute{
									Computed: true,
									MarkdownDescription: `Possible asset sources:` + "\n" +
										`  * '1' - Access portal` + "\n" +
										`  * '2' - SSP` + "\n" +
										`  * '3' - Active directory` + "\n" +
										`  * '4' - Custom` + "\n" +
										`  * '5' - System` + "\n" +
										`  * '6' - Ansible` + "\n" +
										`  * '7' - Manual OT/IoT` + "\n" +
										`  * '8' - Workgroup` + "\n" +
										`  * '9' - Azure active directory` + "\n" +
										`  * '10' - Azure` + "\n" +
										`  * '11' - AWS` + "\n" +
										`  * '12' - GCP` + "\n" +
										`  * '14' - Jamf` + "\n" +
										`  * '15' - Manual Linux` + "\n" +
										`  * '16' - IBM cloud` + "\n" +
										`  * '17' - Oracle cloud` + "\n" +
										`  * '18' - VMware cloud` + "\n" +
										`  * '19' - Alibaba cloud` + "\n" +
										`  * '20' - Lumen cloud` + "\n" +
										`  * '21' - OVH cloud` + "\n" +
										`  * '22' - Connect` + "\n" +
										`  * '23' - AI` + "\n" +
										`  * '24' - SNOW` + "\n" +
										`  * '25' - Google Workspace` + "\n" +
										`  * '26' - OU` + "\n" +
										`  * '27' - Environment` + "\n" +
										`  * '28' - Conditional` + "\n" +
										`  * '29' - Claroty OT` + "\n" +
										`  * '30' - Manual Mac`,
								},
								"switch_location_overridden": schema.BoolAttribute{
									Computed: true,
								},
							},
						},
						"group": schema.SingleNestedAttribute{
							Computed: true,
							Attributes: map[string]schema.Attribute{
								"added_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"added_by": schema.SingleNestedAttribute{
									Computed: true,
									Attributes: map[string]schema.Attribute{
										"id": schema.StringAttribute{
											Computed: true,
										},
										"name": schema.StringAttribute{
											Computed: true,
										},
									},
								},
								"created_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
								"description": schema.StringAttribute{
									Computed: true,
								},
								"direct_members_count": schema.Int64Attribute{
									Computed: true,
								},
								"domain": schema.StringAttribute{
									Computed: true,
								},
								"external_id": schema.StringAttribute{
									Computed: true,
								},
								"guid": schema.StringAttribute{
									Computed: true,
								},
								"has_protection_policy": schema.BoolAttribute{
									Computed: true,
								},
								"id": schema.StringAttribute{
									Computed: true,
								},
								"name": schema.StringAttribute{
									Computed: true,
								},
								"principal_name": schema.StringAttribute{
									Computed: true,
								},
								"role": schema.Int32Attribute{
									Computed: true,
								},
								"sid": schema.StringAttribute{
									Computed: true,
								},
								"updated_at": schema.Int64Attribute{
									Computed:    true,
									Description: `Epoch Millis`,
								},
							},
						},
					},
				},
			},
			"local_processes_list": schema.ListAttribute{
				Computed:    true,
				ElementType: types.StringType,
			},
			"multiple_local_entity_ids_list": schema.ListAttribute{
				Computed:    true,
				ElementType: types.StringType,
			},
			"name": schema.StringAttribute{
				Computed: true,
			},
			"parent_id": schema.StringAttribute{
				Computed: true,
			},
			"parent_switch_rule_id": schema.StringAttribute{
				Computed: true,
			},
			"parent_switch_rule_type": schema.Int32Attribute{
				Computed: true,
			},
			"parent_type": schema.Int32Attribute{
				Computed: true,
			},
			"ports_list": schema.ListNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"ports": schema.StringAttribute{
							Computed: true,
						},
						"protocol_type": schema.Int32Attribute{
							Computed: true,
							MarkdownDescription: `* '0' - HOPOPT` + "\n" +
								`* '1' - ICMP` + "\n" +
								`* '2' - IGMP` + "\n" +
								`* '3' - GGP` + "\n" +
								`* '4' - IPv4` + "\n" +
								`* '5' - ST` + "\n" +
								`* '6' - TCP` + "\n" +
								`* '7' - CBT` + "\n" +
								`* '8' - EGP` + "\n" +
								`* '9' - IGP` + "\n" +
								`* '10' - BBN-RCC-MON` + "\n" +
								`* '11' - NVP-II` + "\n" +
								`* '12' - PUP` + "\n" +
								`* '13' - ARGUS` + "\n" +
								`* '14' - EMCON` + "\n" +
								`* '15' - XNET` + "\n" +
								`* '16' - CHAOS` + "\n" +
								`* '17' - UDP` + "\n" +
								`* '18' - MUX` + "\n" +
								`* '19' - DCN-MEAS` + "\n" +
								`* '20' - HMP` + "\n" +
								`* '21' - PRM` + "\n" +
								`* '22' - XNS-IDP` + "\n" +
								`* '23' - TRUNK-1` + "\n" +
								`* '24' - TRUNK-2` + "\n" +
								`* '25' - LEAF-1` + "\n" +
								`* '26' - LEAF-2` + "\n" +
								`* '27' - RDP` + "\n" +
								`* '28' - IRTP` + "\n" +
								`* '29' - ISO-TP4` + "\n" +
								`* '30' - NETBLT` + "\n" +
								`* '31' - MFE-NSP` + "\n" +
								`* '32' - MERIT-INP` + "\n" +
								`* '33' - DCCP` + "\n" +
								`* '34' - 3PC` + "\n" +
								`* '35' - IDPR` + "\n" +
								`* '36' - XTP` + "\n" +
								`* '37' - DDP` + "\n" +
								`* '38' - IDPR-CMTP` + "\n" +
								`* '39' - TP++` + "\n" +
								`* '40' - IL` + "\n" +
								`* '41' - Embedded` + "\n" +
								`* '42' - SDRP` + "\n" +
								`* '43' - IPv6RoutingHeader` + "\n" +
								`* '44' - IPv6FragmentHeader` + "\n" +
								`* '45' - IDRP` + "\n" +
								`* '46' - RSVP` + "\n" +
								`* '47' - GRE` + "\n" +
								`* '48' - DSR` + "\n" +
								`* '49' - BNA` + "\n" +
								`* '50' - ESP` + "\n" +
								`* '51' - AH` + "\n" +
								`* '52' - I-NLSP` + "\n" +
								`* '53' - SwIPe` + "\n" +
								`* '54' - NARP` + "\n" +
								`* '55' - MOBILE` + "\n" +
								`* '56' - TLSP` + "\n" +
								`* '57' - SKIP` + "\n" +
								`* '58' - ICMPv6` + "\n" +
								`* '59' - IPv6NonExtHeader` + "\n" +
								`* '60' - IPv6DestinationOptions` + "\n" +
								`* '61' - Host-interanl` + "\n" +
								`* '62' - CFTP` + "\n" +
								`* '63' - local-network` + "\n" +
								`* '64' - SAT-EXPAK` + "\n" +
								`* '65' - KRYPTOLAN` + "\n" +
								`* '66' - RVD` + "\n" +
								`* '67' - IPPC` + "\n" +
								`* '68' - distributed-file-system` + "\n" +
								`* '69' - SAT-MON` + "\n" +
								`* '70' - VISA` + "\n" +
								`* '71' - IPCU` + "\n" +
								`* '72' - CPNX` + "\n" +
								`* '73' - CPHB` + "\n" +
								`* '74' - WSN` + "\n" +
								`* '75' - PVP` + "\n" +
								`* '76' - BR-SAT-MON` + "\n" +
								`* '77' - ND` + "\n" +
								`* '78' - WB-MON` + "\n" +
								`* '79' - WB-EXPAK` + "\n" +
								`* '80' - ISO-IP` + "\n" +
								`* '81' - VMTP` + "\n" +
								`* '82' - SECURE-VMTP` + "\n" +
								`* '83' - VINES` + "\n" +
								`* '84' - IPTM` + "\n" +
								`* '85' - NSFNET-IGP` + "\n" +
								`* '86' - DGP` + "\n" +
								`* '87' - TCF` + "\n" +
								`* '88' - EIGRP` + "\n" +
								`* '89' - OSPF` + "\n" +
								`* '90' - Sprite-RPC` + "\n" +
								`* '91' - LARP` + "\n" +
								`* '92' - MTP` + "\n" +
								`* '93' - AX.25` + "\n" +
								`* '94' - OS` + "\n" +
								`* '95' - MICP` + "\n" +
								`* '96' - SCC-SP` + "\n" +
								`* '97' - ETHERIP` + "\n" +
								`* '98' - ENCAP` + "\n" +
								`* '99' - private-encryption` + "\n" +
								`* '100' - GMTP` + "\n" +
								`* '101' - IFMP` + "\n" +
								`* '102' - PNNI` + "\n" +
								`* '103' - PIM` + "\n" +
								`* '104' - ARIS` + "\n" +
								`* '105' - SCPS` + "\n" +
								`* '106' - QNX` + "\n" +
								`* '107' - A/N` + "\n" +
								`* '108' - IPComp` + "\n" +
								`* '109' - SNP` + "\n" +
								`* '110' - Compaq-Peer` + "\n" +
								`* '111' - IPX-in-IP` + "\n" +
								`* '112' - VRRP` + "\n" +
								`* '113' - PGM` + "\n" +
								`* '114' - 0-hop` + "\n" +
								`* '115' - L2TP` + "\n" +
								`* '116' - DDX` + "\n" +
								`* '117' - IATP` + "\n" +
								`* '118' - STP` + "\n" +
								`* '119' - SRP` + "\n" +
								`* '120' - UTI` + "\n" +
								`* '121' - SMP` + "\n" +
								`* '122' - SM` + "\n" +
								`* '123' - PTP` + "\n" +
								`* '124' - IS-IS-over-IPv4` + "\n" +
								`* '125' - FIRE` + "\n" +
								`* '126' - CRTP` + "\n" +
								`* '127' - CRUDP` + "\n" +
								`* '128' - SSCOPMCE` + "\n" +
								`* '129' - IPLT` + "\n" +
								`* '130' - SPS` + "\n" +
								`* '131' - PIPE` + "\n" +
								`* '132' - SCTP` + "\n" +
								`* '133' - FC` + "\n" +
								`* '134' - RSVP-E2E-IGNORE` + "\n" +
								`* '135' - Mobility-Header` + "\n" +
								`* '136' - UDPLite` + "\n" +
								`* '137' - MPLS-in-IP` + "\n" +
								`* '138' - manet` + "\n" +
								`* '139' - HIP` + "\n" +
								`* '140' - Shim6` + "\n" +
								`* '141' - WESP` + "\n" +
								`* '142' - ROHC` + "\n" +
								`* '143' - Ethernet` + "\n" +
								`* '144' - 144 (custom)` + "\n" +
								`* '145' - 145 (custom)` + "\n" +
								`* '146' - 146 (custom)` + "\n" +
								`* '147' - 147 (custom)` + "\n" +
								`* '148' - 148 (custom)` + "\n" +
								`* '149' - 149 (custom)` + "\n" +
								`* '150' - 150 (custom)` + "\n" +
								`* '151' - 151 (custom)` + "\n" +
								`* '152' - 152 (custom)` + "\n" +
								`* '153' - 153 (custom)` + "\n" +
								`* '154' - 154 (custom)` + "\n" +
								`* '155' - 155 (custom)` + "\n" +
								`* '156' - 156 (custom)` + "\n" +
								`* '157' - 157 (custom)` + "\n" +
								`* '158' - 158 (custom)` + "\n" +
								`* '159' - 159 (custom)` + "\n" +
								`* '160' - 160 (custom)` + "\n" +
								`* '161' - 161 (custom)` + "\n" +
								`* '162' - 162 (custom)` + "\n" +
								`* '163' - 163 (custom)` + "\n" +
								`* '164' - 164 (custom)` + "\n" +
								`* '165' - 165 (custom)` + "\n" +
								`* '166' - 166 (custom)` + "\n" +
								`* '167' - 167 (custom)` + "\n" +
								`* '168' - 168 (custom)` + "\n" +
								`* '169' - 169 (custom)` + "\n" +
								`* '170' - 170 (custom)` + "\n" +
								`* '171' - 171 (custom)` + "\n" +
								`* '172' - 172 (custom)` + "\n" +
								`* '173' - 173 (custom)` + "\n" +
								`* '174' - 174 (custom)` + "\n" +
								`* '175' - 175 (custom)` + "\n" +
								`* '176' - 176 (custom)` + "\n" +
								`* '177' - 177 (custom)` + "\n" +
								`* '178' - 178 (custom)` + "\n" +
								`* '179' - 179 (custom)` + "\n" +
								`* '180' - 180 (custom)` + "\n" +
								`* '181' - 181 (custom)` + "\n" +
								`* '182' - 182 (custom)` + "\n" +
								`* '183' - 183 (custom)` + "\n" +
								`* '184' - 184 (custom)` + "\n" +
								`* '185' - 185 (custom)` + "\n" +
								`* '186' - 186 (custom)` + "\n" +
								`* '187' - 187 (custom)` + "\n" +
								`* '188' - 188 (custom)` + "\n" +
								`* '189' - 189 (custom)` + "\n" +
								`* '190' - 190 (custom)` + "\n" +
								`* '191' - 191 (custom)` + "\n" +
								`* '192' - 192 (custom)` + "\n" +
								`* '193' - 193 (custom)` + "\n" +
								`* '194' - 194 (custom)` + "\n" +
								`* '195' - 195 (custom)` + "\n" +
								`* '196' - 196 (custom)` + "\n" +
								`* '197' - 197 (custom)` + "\n" +
								`* '198' - 198 (custom)` + "\n" +
								`* '199' - 199 (custom)` + "\n" +
								`* '200' - 200 (custom)` + "\n" +
								`* '201' - 201 (custom)` + "\n" +
								`* '202' - 202 (custom)` + "\n" +
								`* '203' - 203 (custom)` + "\n" +
								`* '204' - 204 (custom)` + "\n" +
								`* '205' - 205 (custom)` + "\n" +
								`* '206' - 206 (custom)` + "\n" +
								`* '207' - 207 (custom)` + "\n" +
								`* '208' - 208 (custom)` + "\n" +
								`* '209' - 209 (custom)` + "\n" +
								`* '210' - 210 (custom)` + "\n" +
								`* '211' - 211 (custom)` + "\n" +
								`* '212' - 212 (custom)` + "\n" +
								`* '213' - 213 (custom)` + "\n" +
								`* '214' - 214 (custom)` + "\n" +
								`* '215' - 215 (custom)` + "\n" +
								`* '216' - 216 (custom)` + "\n" +
								`* '217' - 217 (custom)` + "\n" +
								`* '218' - 218 (custom)` + "\n" +
								`* '219' - 219 (custom)` + "\n" +
								`* '220' - 220 (custom)` + "\n" +
								`* '221' - 221 (custom)` + "\n" +
								`* '222' - 222 (custom)` + "\n" +
								`* '223' - 223 (custom)` + "\n" +
								`* '224' - 224 (custom)` + "\n" +
								`* '225' - 225 (custom)` + "\n" +
								`* '226' - 226 (custom)` + "\n" +
								`* '227' - 227 (custom)` + "\n" +
								`* '228' - 228 (custom)` + "\n" +
								`* '229' - 229 (custom)` + "\n" +
								`* '230' - 230 (custom)` + "\n" +
								`* '231' - 231 (custom)` + "\n" +
								`* '232' - 232 (custom)` + "\n" +
								`* '233' - 233 (custom)` + "\n" +
								`* '234' - 234 (custom)` + "\n" +
								`* '235' - 235 (custom)` + "\n" +
								`* '236' - 236 (custom)` + "\n" +
								`* '237' - 237 (custom)` + "\n" +
								`* '238' - 238 (custom)` + "\n" +
								`* '239' - 239 (custom)` + "\n" +
								`* '240' - 240 (custom)` + "\n" +
								`* '241' - 241 (custom)` + "\n" +
								`* '242' - 242 (custom)` + "\n" +
								`* '243' - 243 (custom)` + "\n" +
								`* '244' - 244 (custom)` + "\n" +
								`* '245' - 245 (custom)` + "\n" +
								`* '246' - 246 (custom)` + "\n" +
								`* '247' - 247 (custom)` + "\n" +
								`* '248' - 248 (custom)` + "\n" +
								`* '249' - 249 (custom)` + "\n" +
								`* '250' - 250 (custom)` + "\n" +
								`* '251' - 251 (custom)` + "\n" +
								`* '252' - 252 (custom)` + "\n" +
								`* '253' - 253 (custom)` + "\n" +
								`* '254' - 254 (custom)` + "\n" +
								`* '255' - Raw` + "\n" +
								`* '256' - Any`,
						},
					},
				},
			},
			"remote_entity_ids_list": schema.ListAttribute{
				Computed:    true,
				ElementType: types.StringType,
			},
			"remote_entity_infos": schema.ListNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"id": schema.StringAttribute{
							Computed:    true,
							Description: `EntityId`,
						},
						"name": schema.StringAttribute{
							Computed:    true,
							Description: `Entity Name`,
						},
					},
				},
			},
			"rule_review": schema.SingleNestedAttribute{
				Computed: true,
				Attributes: map[string]schema.Attribute{
					"details": schema.StringAttribute{
						Computed:    true,
						Description: `Optional if reason != OTHER(7), mandatory if reason == OTHER(7)`,
					},
					"reason": schema.Int64Attribute{
						Computed: true,
					},
				},
				MarkdownDescription: `Mandatory object for rule review approve_with_changes / reject.` + "\n" +
					`` + "\n" +
					`reason: {` + "\n" +
					`    HUMAN_TRAFFIC_COVERED_BY_MFA = 1,` + "\n" +
					`    TIGHTEN_RULE_SCOPE = 2,` + "\n" +
					`    MISSING_PORT_OR_PROCESS = 3,` + "\n" +
					`    AFFECTED_ENTITIES_CONTAINED_IN_AN_EXISTING_GROUP = 4,` + "\n" +
					`    REDUNDANT_RULE = 5,` + "\n" +
					`    TRAFFIC_SHOULD_BE_BLOCKED = 6,` + "\n" +
					`    OTHER = 7` + "\n" +
					`}`,
			},
			"ruleclass": schema.Int32Attribute{
				Computed: true,
				MarkdownDescription: `* '1' - Trivial` + "\n" +
					`* '2' - Permissive` + "\n" +
					`* '3' - Privileged` + "\n" +
					`* '4' - Critical` + "\n" +
					`* '5' - System` + "\n" +
					`* '6' - Preventative` + "\n" +
					`* '8' - Dangerous`,
			},
			"services_list": schema.ListAttribute{
				Computed:    true,
				ElementType: types.StringType,
			},
			"src_users_list": schema.ListNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"id": schema.StringAttribute{
							Computed: true,
						},
						"sid": schema.StringAttribute{
							Computed: true,
						},
					},
				},
			},
			"state": schema.Int32Attribute{
				Computed: true,
				MarkdownDescription: `* '1' - Enabled` + "\n" +
					`* '2' - Disabled` + "\n" +
					`* '3' - Deleted By User` + "\n" +
					`* '4' - Pending Review` + "\n" +
					`* '5' - Pending Review Auto` + "\n" +
					`* '6' - Rejected by User` + "\n" +
					`* '7' - Excluded by User`,
			},
			"updated_at": schema.Int64Attribute{
				Computed:    true,
				Description: `Epoch Millis`,
			},
			"updated_by": schema.SingleNestedAttribute{
				Computed: true,
				Attributes: map[string]schema.Attribute{
					"id": schema.StringAttribute{
						Computed:    true,
						Description: `EntityId`,
					},
					"name": schema.StringAttribute{
						Computed:    true,
						Description: `Entity Name`,
					},
				},
			},
		},
	}
}

func (r *OutboundRuleDataSource) Configure(ctx context.Context, req datasource.ConfigureRequest, resp *datasource.ConfigureResponse) {
	// Prevent panic if the provider has not been configured.
	if req.ProviderData == nil {
		return
	}

	client, ok := req.ProviderData.(*sdk.ZeroNetworks)

	if !ok {
		resp.Diagnostics.AddError(
			"Unexpected DataSource Configure Type",
			fmt.Sprintf("Expected *sdk.ZeroNetworks, got: %T. Please report this issue to the provider developers.", req.ProviderData),
		)

		return
	}

	r.client = client
}

func (r *OutboundRuleDataSource) Read(ctx context.Context, req datasource.ReadRequest, resp *datasource.ReadResponse) {
	var data *OutboundRuleDataSourceModel
	var item types.Object

	resp.Diagnostics.Append(req.Config.Get(ctx, &item)...)
	if resp.Diagnostics.HasError() {
		return
	}

	resp.Diagnostics.Append(item.As(ctx, &data, basetypes.ObjectAsOptions{
		UnhandledNullAsEmpty:    true,
		UnhandledUnknownAsEmpty: true,
	})...)

	if resp.Diagnostics.HasError() {
		return
	}

	request, requestDiags := data.ToOperationsOutboundRuleGetRequest(ctx)
	resp.Diagnostics.Append(requestDiags...)

	if resp.Diagnostics.HasError() {
		return
	}
	res, err := r.client.RulesOutbound.OutboundRuleGet(ctx, *request)
	if err != nil {
		resp.Diagnostics.AddError("failure to invoke API", err.Error())
		if res != nil && res.RawResponse != nil {
			resp.Diagnostics.AddError("unexpected http request/response", debugResponse(res.RawResponse))
		}
		return
	}
	if res == nil {
		resp.Diagnostics.AddError("unexpected response from API", fmt.Sprintf("%v", res))
		return
	}
	if res.StatusCode != 200 {
		resp.Diagnostics.AddError(fmt.Sprintf("unexpected response from API. Got an unexpected response code %v", res.StatusCode), debugResponse(res.RawResponse))
		return
	}
	if !(res.RuleItem != nil && res.RuleItem.Item != nil) {
		resp.Diagnostics.AddError("unexpected response from API. Got an unexpected response body", debugResponse(res.RawResponse))
		return
	}
	resp.Diagnostics.Append(data.RefreshFromSharedRule(ctx, res.RuleItem.Item)...)

	if resp.Diagnostics.HasError() {
		return
	}

	// Save updated data into Terraform state
	resp.Diagnostics.Append(resp.State.Set(ctx, &data)...)
}
