// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	tfTypes "github.com/speakeasy/terraform-provider-zeronetworks/internal/provider/types"
	"github.com/speakeasy/terraform-provider-zeronetworks/internal/sdk/models/operations"
	"github.com/speakeasy/terraform-provider-zeronetworks/internal/sdk/models/shared"
)

func (r *CustomGroupResourceModel) ToSharedCustomGroupBody(ctx context.Context) (*shared.CustomGroupBody, diag.Diagnostics) {
	var diags diag.Diagnostics

	var name string
	name = r.Name.ValueString()

	description := new(string)
	if !r.Description.IsUnknown() && !r.Description.IsNull() {
		*description = r.Description.ValueString()
	} else {
		description = nil
	}
	membersID := make([]string, 0, len(r.MembersID))
	for _, membersIDItem := range r.MembersID {
		membersID = append(membersID, membersIDItem.ValueString())
	}
	out := shared.CustomGroupBody{
		Name:        name,
		Description: description,
		MembersID:   membersID,
	}

	return &out, diags
}

func (r *CustomGroupResourceModel) ToOperationsCustomGroupsUpdateRequest(ctx context.Context) (*operations.CustomGroupsUpdateRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	customGroupBody, customGroupBodyDiags := r.ToSharedCustomGroupBody(ctx)
	diags.Append(customGroupBodyDiags...)

	if diags.HasError() {
		return nil, diags
	}

	out := operations.CustomGroupsUpdateRequest{
		ID:              id,
		CustomGroupBody: *customGroupBody,
	}

	return &out, diags
}

func (r *CustomGroupResourceModel) ToOperationsCustomGroupGetRequest(ctx context.Context) (*operations.CustomGroupGetRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.CustomGroupGetRequest{
		ID: id,
	}

	return &out, diags
}

func (r *CustomGroupResourceModel) ToOperationsCustomGroupsDeleteRequest(ctx context.Context) (*operations.CustomGroupsDeleteRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	var id string
	id = r.ID.ValueString()

	out := operations.CustomGroupsDeleteRequest{
		ID: id,
	}

	return &out, diags
}

func (r *CustomGroupResourceModel) RefreshFromSharedCustomGroup(ctx context.Context, resp *shared.CustomGroup) diag.Diagnostics {
	var diags diag.Diagnostics

	if resp != nil {
		r.AddedAt = types.Int64PointerValue(resp.AddedAt)
		if resp.AddedBy == nil {
			r.AddedBy = nil
		} else {
			r.AddedBy = &tfTypes.AddedBy{}
			r.AddedBy.ID = types.StringPointerValue(resp.AddedBy.ID)
			r.AddedBy.Name = types.StringPointerValue(resp.AddedBy.Name)
		}
		r.CreatedAt = types.Int64PointerValue(resp.CreatedAt)
		r.Description = types.StringPointerValue(resp.Description)
		r.DirectMembersCount = types.Int64PointerValue(resp.DirectMembersCount)
		r.Domain = types.StringPointerValue(resp.Domain)
		r.GUID = types.StringPointerValue(resp.GUID)
		r.HasProtectionPolicy = types.BoolPointerValue(resp.HasProtectionPolicy)
		r.ID = types.StringPointerValue(resp.ID)
		r.Name = types.StringPointerValue(resp.Name)
		r.PrincipalName = types.StringPointerValue(resp.PrincipalName)
		r.Role = types.Int64PointerValue(resp.Role)
		r.Sid = types.StringPointerValue(resp.Sid)
		r.UpdatedAt = types.Int64PointerValue(resp.UpdatedAt)
	}

	return diags
}
